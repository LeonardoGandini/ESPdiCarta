esphome:
  name: carta-diggitale
  friendly_name: carta diggitale
  on_boot:
    priority: -10
    then:
      - delay: 10s
      - component.update: epaper  

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""

ota:
  password: ""
  
font:
  - file: 'fonts/Roboto-Regular.ttf'
    id: font_regular
    size: 25
  - file: 'fonts/Roboto-Regular.ttf'
    id: font_regular_75
    size: 75
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '’','(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z','å', 'ä', 'ö', '/','º','µ','³']    
    
  - file: 'fonts/Roboto-Bold.ttf'
    id: font_medium_28
    size: 28

  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: icon_font_30
    size: 45
    glyphs: [
      "", # mdi-thermometer
      "", # mdi-water-percent
      "ﴟ", # mdi-air-filter
      "󰒋", #server
      "󰔏", #temp
      "󰇥" #duck
      ]

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password    

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO14
  id: epaper_display

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/London
    on_time:
      # Every 1 minutes
      - seconds: 0
        then:
          - component.update: epaper

sensor:
  - platform: homeassistant
    entity_id: sensor.zigbee_33983_1_1_temperature
    id: my_temp

  - platform: homeassistant
    entity_id: sensor.kitchen_temperature
    id: my_kitchen_temp

    

binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.contact_sensor_3
    id: gym_door
    device_class: door
  - platform: homeassistant
    entity_id: binary_sensor.server_door
    id: server_door
    device_class: door
  - platform: homeassistant
    entity_id: binary_sensor.contact_sensor_2
    id: main_door
    device_class: door

display:
  - platform: waveshare_epaper
    id: epaper  
    cs_pin: GPIO15
    dc_pin: GPIO27
    busy_pin: GPIO25
    reset_pin: GPIO26
    model: 7.50inV2alt
    #rotation: 180
    update_interval: 2min
    #reset_duration: 2ms

    lambda: |-
      ESP_LOGI("display", "Updating...");
      // OUTSIDE
      
      float mytemp = id(my_temp).state;
      float mykitchtemp = id(my_kitchen_temp).state;
      
      //it.printf(7, 60, id(font_regular_75), TextAlign::BASELINE_LEFT, "It can’t rain all the time");

      it.printf(7, 75, id(font_regular_75), TextAlign::BASELINE_LEFT , "Rack Temp is %.1f°C", mytemp);
      it.printf(7, 195, id(font_regular_75), TextAlign::BASELINE_LEFT , "Kitchen Temp is %.1f°C", mykitchtemp);  

      //it.line(1, 200, 650, 200);
      it.filled_rectangle(1, 220, 200, 15);

      it.printf(7, 244, id(font_regular), "Gym Door is: %s", id(gym_door).state ? "Open" : "Close");
      it.printf(7, 265, id(font_regular), "Server Door is: %s", id(server_door).state ? "Open" : "Close");
      it.printf(7, 295, id(font_regular), "Main Door is: %s", id(main_door).state ? "Open" : "Close");

      it.line(1, 340, 500, 340);



      it.strftime(7, 370 , id(font_medium_28), TextAlign::BASELINE_LEFT , "Updated at %d/%b/%Y %H:%M", id(homeassistant_time).now());

      it.printf(0, 430, id(icon_font_30), TextAlign::BASELINE_LEFT, "󰇥 󰒋 󰔏");